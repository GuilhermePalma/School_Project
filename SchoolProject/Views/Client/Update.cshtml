@model SchoolProject.Models.Client

@{
    ViewBag.Title = "Atualizar Usuario";

    if (Model == null || Model.Cpf.Length != 11)
    {
        <div class="alert alert-danger" role="alert">
            <h4><b>Não é Possivel Acessar essa Pagina</b></h4>
            <p>
                Recomendamos que Faça a navegação pelo Site usando as opções
                disponibilizadas após realizar o @Html.ActionLink("Login", "Index", "Client")
            </p>
            <p><i>Parametros Invalidos</i></p>
            <br />

            @Html.ActionLink("Login", "Index", "Client", new { }, new { @class = "btn btn-primary" })
            @Html.ActionLink("Cadastro", "Cadastro", "Client", new { }, new { @class = "btn btn-primary" })
            @Html.ActionLink("Pagina Inicial", "Index", "Home", new { }, new { @class = "btn btn-default" })
        </div>
    }
    else
    {
        <h2>@ViewBag.Title</h2>
        <hr />

        // Formatação e Censura do CPF/DDD/telefone
        string cpf_formatted = Model.FormattedCPF(Model.Cpf);
        Model.Telefone = Model.FormattedPhone(Model.Ddd, Model.Telefone);

        using (Html.BeginForm())
        {
            Html.AntiForgeryToken();

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Cpf)
                    </dt>

                    <dd>
                        @cpf_formatted
                    </dd>
                </dl>

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                
                @if (Model.ValidationMaskPhone(Model.Telefone))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control maskPhone" } })
                            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input class="form-control" id="disabledInput" type="text" placeholder="Campo não Disponivel" disabled>
                        </div>
                    </div>
                }

                <div class="form-group" style="margin-top:35px">
                    @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Estado, ViewBag.Estados as IEnumerable<SelectListItem>,
                           htmlAttributes: new { @required = "required", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" style="margin-top:35px">
                    @Html.LabelFor(model => model.Numero, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Numero, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Numero, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" value="Atualizar" class="btn btn-default" style="margin-left:10px">Atualizar</button>
                    </div>
                </div>
            </div>
        }

        using (Html.BeginForm("Login", "Client", new { Cpf = Model.Cpf }, FormMethod.Post, new { }))
        {
            // Responsavel por Voltar à Tela de Login ja Logado
            <button type="submit" value="Login" class="btn btn-default" style="margin-left:20px">« Voltar</button>
        }

    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/inputmask/MaskPhone.js")
}