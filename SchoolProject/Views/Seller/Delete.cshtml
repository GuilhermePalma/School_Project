@model SchoolProject.Models.Seller

@{
    ViewBag.Title = "Excluir Vendedor";
    string controller = "Seller";

    if (Model == null || Model.Cnpj.Length != 14)
    {
        
        <div class="alert alert-danger" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <h4>Não é Possivel Acessar essa Pagina</h4>
            <p>
                Recomendamos que Faça a navegação pelo Site usando as opções 
                 disponibilizadas após realizar o @Html.ActionLink("Login", "Index", controller)
            </p>
            <p><i>Parametros Invalidos</i></p>
            <br />
            @Html.ActionLink("Login", "Index", controller, new { } ,new { @class = "btn btn-primary" })
            @Html.ActionLink("Cadastro", "Cadastro", controller, new { } ,new { @class = "btn btn-primary" })
            @Html.ActionLink("Pagina Inicial", "Index", controller, new { } ,new { @class = "btn btn-default" })
        </div>
    }
    else
    {
        <h2>@ViewBag.Title: @Model.Name</h2>
        <hr />

        // Formatação e Censura do CPF
        string cnpj_formatted = Model.Cnpj.Substring(0, 2) + ".";
        cnpj_formatted += Model.Cnpj.Substring(2, 1) + "**.**";
        cnpj_formatted += Model.Cnpj.Substring(7, 1) + "/";
        cnpj_formatted += Model.Cnpj.Substring(8, 4) + "-" + Model.Cnpj.Substring(12, 2);

        <h3>Você tem certeza que deseja Excluir ?</h3>
        <p class="alert alert-warning">Após Clicar no botão "Excluir", não é possivel reverter o Processo</p>

        <dl class="dl-horizontal">

            <dt>
                @Html.DisplayNameFor(model => model.Name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Cnpj)
            </dt>

            <dd>
                @cnpj_formatted
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Logradouro)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Logradouro)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Cidade)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Cidade)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Estado)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Estado)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Numero)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Numero)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Complemento)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Complemento)
            </dd>

        </dl>
            
        using (Html.BeginForm())
        {
            Html.AntiForgeryToken();
            <div class="col-md-offset-1">
                <input type="submit" value="Excluir" class="btn btn-default" />
            </div>
        }

        <br />

        using (Html.BeginForm("Login", controller, new { Cnpj = Model.Cnpj}, FormMethod.Post))
        {
            <button type="submit" value="Login" class="btn btn-default">« Voltar</button>
        }
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}