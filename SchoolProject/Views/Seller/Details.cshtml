@model SchoolProject.Models.Seller

@{
    ViewBag.Title = "Detalhes do Vendedor";
    string controller = "Seller";

    if (Model == null || Model.Cnpj.Length != 14)
    {
        <div class="alert alert-danger" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            <h4>Não é Possivel Acessar essa Pagina</h4>
            <p>
                Recomendamos que Faça a navegação pelo Site usando as opções 
                 disponibilizadas após realizar o @Html.ActionLink("Login", "Index", controller)
            </p>
            <p><i>Parametros Invalidos</i></p>
            <br />
            
            <br />
            @Html.ActionLink("Login", "Index", controller, new { } ,new { @class = "btn btn-primary" })
            @Html.ActionLink("Cadastro", "Cadastro", controller, new { } ,new { @class = "btn btn-primary" })
            @Html.ActionLink("Pagina Inicial", "Index", controller, new { } ,new { @class = "btn btn-default" })
        </div>
    }
    else
    {
        <h2>@ViewBag.Title</h2>
        <hr />

        // Formatação e Censura do CPF/DDD/telefone
        string cnpj_formatted = Model.Formatted_Cnpj(Model.Cnpj);
        string phone_formatted = new SchoolProject.Models.Phone().FormattedPhone(Model.Ddd, Model.Telefone);
        string cep_formatted = new SchoolProject.Models.Address().FormattedCepMask(Model.Cep);

        <div>
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Cnpj)
                </dt>

                <dd>
                    @cnpj_formatted
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Telefone)
                </dt>

                <dd>
                    @phone_formatted
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Cidade)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Cidade) - @Html.DisplayFor(model => model.Estado)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Logradouro)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Logradouro)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Cep)
                </dt>

                <dd>
                    @cep_formatted
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Numero)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Numero)
                </dd>

                @if (!string.IsNullOrEmpty(Model.Complemento))
                {
                    <dt>
                        @Html.DisplayNameFor(model => model.Complemento)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Complemento)
                    </dd>
                }

            </dl>
        </div>

        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-offset-1 col-md-10">
                    @Html.ActionLink("Editar Vendedor", "Atualizar", new { cnpj = Model.Cnpj}, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>

        using (Html.BeginForm("Login", controller, new { Cnpj = Model.Cnpj }, FormMethod.Post))
        {
            <button type="submit" value="Login" class="btn btn-default">« Voltar</button>
        }
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
