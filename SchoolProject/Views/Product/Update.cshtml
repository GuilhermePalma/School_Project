@model SchoolProject.Models.Product

@{
    ViewBag.Title = "Atualizar Produto";
    string controller = "Product";
    string controllerSeller = "Seller";
    string cnpj_formatted = new SchoolProject.Models.Seller().Formatted_Cnpj(Model.Cnpj_Seller);

    <h2>@ViewBag.Title</h2>
    <hr />

    using (Html.BeginForm("Atualizar", controller, FormMethod.Post))
    {
        Html.AntiForgeryToken();

        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Id_product, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Model.Id_product
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cnpj_Seller, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @* Esconde o CNPJ Original para que Consiga Fazer o POST Futuro *@
                    @Html.HiddenFor(model => model.Cnpj_Seller, new { htmlAttributes = new { @class = "form-control" } })
                    @cnpj_formatted
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-top:35px">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-top:35px">
                @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Estado, ViewBag.Estados as IEnumerable<SelectListItem>,
                        htmlAttributes: new { @required = "required", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Logradouro, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Logradouro, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Logradouro, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="reset" class="btn btn-default">Limpar</button>
                    <button type="submit" value="Atualizar" class="btn btn-default" style="margin-left:10px">Atualizar</button>
                </div>
            </div>

        </div>
    }

    using (Html.BeginForm("Login", controllerSeller, new { Cnpj = Model.Cnpj_Seller }, FormMethod.Post))
    {
        <button type="submit" value="Login" class="btn btn-default">« Voltar</button>
    }
}